{"ast":null,"code":"import _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _wrapNativeSuper from \"@babel/runtime/helpers/wrapNativeSuper\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { PermissionStatus, Platform } from 'expo-modules-core';\nexport function getPermissionsAsync() {\n  var status;\n  return _regeneratorRuntime.async(function getPermissionsAsync$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          status = getRequestPermission() ? PermissionStatus.UNDETERMINED : isIOS() ? PermissionStatus.DENIED : PermissionStatus.GRANTED;\n          return _context.abrupt(\"return\", {\n            status: status,\n            expires: 'never',\n            canAskAgain: true,\n            granted: status === PermissionStatus.GRANTED\n          });\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function requestPermissionsAsync() {\n  var status;\n  return _regeneratorRuntime.async(function requestPermissionsAsync$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(askSensorPermissionAsync());\n\n        case 2:\n          status = _context2.sent;\n          return _context2.abrupt(\"return\", {\n            status: status,\n            expires: 'never',\n            granted: status === PermissionStatus.GRANTED,\n            canAskAgain: false\n          });\n\n        case 4:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction askSensorPermissionAsync() {\n  var requestPermission, status;\n  return _regeneratorRuntime.async(function askSensorPermissionAsync$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          requestPermission = getRequestPermission();\n\n          if (requestPermission) {\n            _context3.next = 3;\n            break;\n          }\n\n          return _context3.abrupt(\"return\", PermissionStatus.GRANTED);\n\n        case 3:\n          _context3.next = 5;\n          return _regeneratorRuntime.awrap(requestPermission());\n\n        case 5:\n          status = _context3.sent;\n          _context3.t0 = status;\n          _context3.next = _context3.t0 === 'granted' ? 9 : _context3.t0 === 'denied' ? 10 : 11;\n          break;\n\n        case 9:\n          return _context3.abrupt(\"return\", PermissionStatus.GRANTED);\n\n        case 10:\n          return _context3.abrupt(\"return\", PermissionStatus.DENIED);\n\n        case 11:\n          return _context3.abrupt(\"return\", PermissionStatus.UNDETERMINED);\n\n        case 12:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nexport function getRequestPermission() {\n  var _DeviceMotionEvent, _DeviceOrientationEve;\n\n  if (!Platform.isDOMAvailable) {\n    return null;\n  }\n\n  if (typeof DeviceMotionEvent !== 'undefined' && !!((_DeviceMotionEvent = DeviceMotionEvent) != null && _DeviceMotionEvent.requestPermission)) {\n    return DeviceMotionEvent.requestPermission;\n  } else if (typeof DeviceOrientationEvent !== 'undefined' && !!((_DeviceOrientationEve = DeviceOrientationEvent) != null && _DeviceOrientationEve.requestPermission)) {\n    return DeviceOrientationEvent.requestPermission;\n  }\n\n  return null;\n}\n\nvar PermissionError = function (_Error) {\n  _inherits(PermissionError, _Error);\n\n  var _super = _createSuper(PermissionError);\n\n  function PermissionError(eventName) {\n    _classCallCheck(this, PermissionError);\n\n    var errorMessage = \"Cannot observe event: \" + eventName + \". How to fix:\";\n    errorMessage += \"\\n- Ensure you've requested the `MOTION` permission via expo-permissions (this must be done in a touch event).\";\n\n    if (location.protocol !== 'https:') {\n      errorMessage += '\\n- Ensure that you are hosting with `https` as DeviceMotion and DeviceOrientation are now secure APIs.';\n    }\n\n    if (isIOS() && !getRequestPermission()) {\n      errorMessage += '\\n- On iOS 12.2, you must manually enable device orientation in `Settings > Safari > Motion & Orientation Access`.';\n    }\n\n    return _super.call(this, errorMessage);\n  }\n\n  return _createClass(PermissionError);\n}(_wrapNativeSuper(Error));\n\nexport function assertSensorEventEnabledAsync(eventName, timeout) {\n  return _regeneratorRuntime.async(function assertSensorEventEnabledAsync$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          if (Platform.isDOMAvailable) {\n            _context4.next = 2;\n            break;\n          }\n\n          return _context4.abrupt(\"return\", false);\n\n        case 2:\n          if (!getRequestPermission()) {\n            _context4.next = 8;\n            break;\n          }\n\n          _context4.next = 5;\n          return _regeneratorRuntime.awrap(isSensorEnabledAsync(eventName, timeout));\n\n        case 5:\n          if (!_context4.sent) {\n            _context4.next = 7;\n            break;\n          }\n\n          return _context4.abrupt(\"return\", true);\n\n        case 7:\n          throw new PermissionError(eventName);\n\n        case 8:\n          return _context4.abrupt(\"return\", true);\n\n        case 9:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function isSensorEnabledAsync(eventName) {\n  var timeout,\n      _args5 = arguments;\n  return _regeneratorRuntime.async(function isSensorEnabledAsync$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          timeout = _args5.length > 1 && _args5[1] !== undefined ? _args5[1] : 250;\n\n          if (Platform.isDOMAvailable) {\n            _context5.next = 3;\n            break;\n          }\n\n          return _context5.abrupt(\"return\", false);\n\n        case 3:\n          if (!(!isIOS && !getRequestPermission())) {\n            _context5.next = 5;\n            break;\n          }\n\n          return _context5.abrupt(\"return\", true);\n\n        case 5:\n          return _context5.abrupt(\"return\", new Promise(function (resolve) {\n            var id = setTimeout(function () {\n              window.removeEventListener(eventName, listener);\n              resolve(false);\n            }, timeout);\n\n            var listener = function listener() {\n              clearTimeout(id);\n              window.removeEventListener(eventName, listener);\n              resolve(true);\n            };\n\n            window.addEventListener(eventName, listener);\n          }));\n\n        case 6:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction isIOS() {\n  var isIOSUA = /(iPad|iPhone|iPod)/g.test(navigator.userAgent);\n  var isIE11 = !!window['MSStream'];\n  return isIOSUA && !isIE11;\n}","map":{"version":3,"sources":["../../src/utils/isSensorEnabledAsync.web.ts"],"names":[],"mappings":"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","sourcesContent":["import { PermissionResponse, PermissionStatus, Platform } from 'expo-modules-core';\n\ntype SensorEventName = 'deviceorientation' | 'devicemotion';\n\nexport async function getPermissionsAsync(): Promise<PermissionResponse> {\n  // We can infer from the requestor if this is an older browser.\n  const status = getRequestPermission()\n    ? PermissionStatus.UNDETERMINED\n    : isIOS()\n    ? PermissionStatus.DENIED\n    : PermissionStatus.GRANTED;\n  return {\n    status,\n    expires: 'never',\n    canAskAgain: true,\n    granted: status === PermissionStatus.GRANTED,\n  };\n}\n\nexport async function requestPermissionsAsync(): Promise<PermissionResponse> {\n  const status = await askSensorPermissionAsync();\n  return {\n    status,\n    expires: 'never',\n    granted: status === PermissionStatus.GRANTED,\n    canAskAgain: false,\n  };\n}\n\nasync function askSensorPermissionAsync(): Promise<PermissionStatus> {\n  const requestPermission = getRequestPermission();\n  // Technically this is incorrect because it doesn't account for iOS 12.2 Safari.\n  // But unfortunately we can only abstract so much.\n  if (!requestPermission) return PermissionStatus.GRANTED;\n\n  // If this isn't invoked in a touch-event then it never resolves.\n  // Safari probably should throw an error but because it doesn't we have no way of informing the developer.\n  const status = await requestPermission();\n  switch (status) {\n    case 'granted':\n      return PermissionStatus.GRANTED;\n    case 'denied':\n      return PermissionStatus.DENIED;\n    default:\n      return PermissionStatus.UNDETERMINED;\n  }\n}\n\n/**\n * Temporary solution until `tslib.d.ts` is updated to include the new DeviceOrientation/DeviceMotion API (as of 2021.10.26 it's not implemented completely, it's in experimental state).\n *\n * `typescript@4.4.4` is missing `requestPermission` described in\n * - https://w3c.github.io/deviceorientation/#deviceorientation\n * - https://w3c.github.io/deviceorientation/#devicemotion\n *\n * MDN docs does not describe this property as well:\n * - https://developer.mozilla.org/en-US/docs/Web/API/DeviceOrientationEvent\n * - https://developer.mozilla.org/en-US/docs/Web/API/DeviceMotionEvent\n *\n * Below are just redefinitions of the existing typing available in the:\n * - https://github.com/microsoft/TypeScript/blob/01de6ff2ecdc6175727f7f999b887519d40ca115/lib/lib.dom.d.ts#L4216\n * - https://github.com/microsoft/TypeScript/blob/01de6ff2ecdc6175727f7f999b887519d40ca115/lib/lib.dom.d.ts#L4241.\n */\ndeclare let DeviceMotionEvent: {\n  prototype: DeviceMotionEvent;\n  new (type: string, eventInitDict?: DeviceMotionEventInit): DeviceMotionEvent;\n  requestPermission?: () => Promise<PermissionState>;\n};\n/**\n * See `DeviceMotionEvent` description a few lines above.\n */\ndeclare let DeviceOrientationEvent: {\n  prototype: DeviceOrientationEvent;\n  new (type: string, eventInitDict?: DeviceOrientationEventInit): DeviceOrientationEvent;\n  requestPermission?: () => Promise<PermissionState>;\n};\n\nexport function getRequestPermission(): (() => Promise<PermissionState>) | null {\n  if (!Platform.isDOMAvailable) {\n    return null;\n  }\n\n  if (typeof DeviceMotionEvent !== 'undefined' && !!DeviceMotionEvent?.requestPermission) {\n    return DeviceMotionEvent.requestPermission;\n  } else if (\n    typeof DeviceOrientationEvent !== 'undefined' &&\n    !!DeviceOrientationEvent?.requestPermission\n  ) {\n    return DeviceOrientationEvent.requestPermission;\n  }\n\n  return null;\n}\n\nclass PermissionError extends Error {\n  constructor(eventName: string) {\n    let errorMessage = `Cannot observe event: ${eventName}. How to fix:`;\n\n    errorMessage += `\\n- Ensure you've requested the \\`MOTION\\` permission via expo-permissions (this must be done in a touch event).`;\n\n    if (location.protocol !== 'https:') {\n      errorMessage +=\n        '\\n- Ensure that you are hosting with `https` as DeviceMotion and DeviceOrientation are now secure APIs.';\n    }\n    // is iOS and doesn't support requesting permissions, must be 12.2\n    if (isIOS() && !getRequestPermission()) {\n      errorMessage +=\n        '\\n- On iOS 12.2, you must manually enable device orientation in `Settings > Safari > Motion & Orientation Access`.';\n    }\n\n    super(errorMessage);\n  }\n}\n\n// iOS 12.2 disables DeviceMotion by default now\n// https://github.com/w3c/deviceorientation/issues/57\nexport async function assertSensorEventEnabledAsync(\n  eventName: SensorEventName,\n  timeout?: number\n): Promise<boolean> {\n  if (!Platform.isDOMAvailable) {\n    return false;\n  }\n\n  if (getRequestPermission()) {\n    if (await isSensorEnabledAsync(eventName, timeout)) {\n      return true;\n    }\n    throw new PermissionError(eventName);\n  }\n  return true;\n}\n\n// throw error if the sensor is disabled.\nexport async function isSensorEnabledAsync(\n  eventName: SensorEventName,\n  // Initial interval tests found results on a median of\n  // devicemotion:\n  // - iPhone 7 Plus: 166.6666753590107ms\n  // - iPhone X: 166.6666753590107ms\n  // deviceorientation:\n  // -\n  //\n  // The initial launch of iOS Safari onto a page calling this API seems to take a little longer than a regular call.\n  // devicemotion:\n  // - ~35ms\n  // deviceorientation:\n  // - ~45ms\n  //\n  timeout: number = 250\n): Promise<boolean> {\n  if (!Platform.isDOMAvailable) {\n    return false;\n  }\n\n  // If there is no method to request permission then the device has access to device motion.\n  // Older versions of iOS have no method but still disable motion so we should always check on iOS.\n  if (!isIOS && !getRequestPermission()) {\n    return true;\n  }\n\n  return new Promise((resolve) => {\n    const id = setTimeout(() => {\n      window.removeEventListener(eventName, listener);\n      resolve(false);\n    }, timeout);\n\n    const listener = (): void => {\n      clearTimeout(id);\n      window.removeEventListener(eventName, listener);\n      resolve(true);\n    };\n\n    window.addEventListener(eventName, listener);\n  });\n}\n\n// https://stackoverflow.com/a/9039885/4047926\nfunction isIOS(): boolean {\n  const isIOSUA = /(iPad|iPhone|iPod)/g.test(navigator.userAgent);\n  const isIE11 = !!window['MSStream'];\n  return isIOSUA && !isIE11;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}