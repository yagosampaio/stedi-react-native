{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { SyntheticPlatformEmitter } from 'expo-modules-core';\nimport { assertSensorEventEnabledAsync, getPermissionsAsync, isSensorEnabledAsync, requestPermissionsAsync } from \"./utils/isSensorEnabledAsync.web\";\nvar eventName = 'devicemotion';\nexport default {\n  get name() {\n    return 'ExponentDeviceMotion';\n  },\n\n  get Gravity() {\n    return 9.80665;\n  },\n\n  isAvailableAsync: function isAvailableAsync() {\n    return function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(typeof DeviceMotionEvent === 'undefined')) {\n                _context.next = 2;\n                break;\n              }\n\n              return _context.abrupt(\"return\", false);\n\n            case 2:\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(isSensorEnabledAsync(eventName));\n\n            case 4:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }();\n  },\n  _handleMotion: function _handleMotion(motion) {\n    SyntheticPlatformEmitter.emit('deviceMotionDidUpdate', {\n      acceleration: motion.acceleration,\n      accelerationIncludingGravity: motion.accelerationIncludingGravity,\n      interval: motion.interval,\n      rotationRate: motion.rotationRate,\n      orientation: window.orientation\n    });\n  },\n  getPermissionsAsync: getPermissionsAsync,\n  requestPermissionsAsync: requestPermissionsAsync,\n  startObserving: function startObserving() {\n    assertSensorEventEnabledAsync(eventName);\n    window.addEventListener(eventName, this._handleMotion);\n  },\n  stopObserving: function stopObserving() {\n    window.removeEventListener(eventName, this._handleMotion);\n  }\n};","map":{"version":3,"sources":["../src/ExponentDeviceMotion.web.ts"],"names":[],"mappings":";AAAA,SAAS,wBAAT,QAAyC,mBAAzC;AAEA,SACE,6BADF,EAEE,mBAFF,EAGE,oBAHF,EAIE,uBAJF;AAOA,IAAM,SAAS,GAAG,cAAlB;AAEA,eAAe;EACb,IAAI,IAAJ,GAAQ;IACN,OAAO,sBAAP;EACD,CAHY;;EAOb,IAAI,OAAJ,GAAW;IACT,OAAO,OAAP;EACD,CATY;;EAUP,gBAVO,8BAUS;IAAA;MAAA;QAAA;UAAA;YAAA;cAAA,MAChB,OAAO,iBAAP,KAA6B,WADb;gBAAA;gBAAA;cAAA;;cAAA,iCAEX,KAFW;;YAAA;cAAA;cAAA,iCAIP,oBAAoB,CAAC,SAAD,CAJb;;YAAA;cAAA;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EAKrB,CAfY;EAgBb,aAhBa,yBAgBC,MAhBD,EAgBO;IAElB,wBAAwB,CAAC,IAAzB,CAA8B,uBAA9B,EAAuD;MACrD,YAAY,EAAE,MAAM,CAAC,YADgC;MAErD,4BAA4B,EAAE,MAAM,CAAC,4BAFgB;MAGrD,QAAQ,EAAE,MAAM,CAAC,QAHoC;MAIrD,YAAY,EAAE,MAAM,CAAC,YAJgC;MAKrD,WAAW,EAAE,MAAM,CAAC;IALiC,CAAvD;EAOD,CAzBY;EA0Bb,mBAAmB,EAAnB,mBA1Ba;EA2Bb,uBAAuB,EAAvB,uBA3Ba;EA4Bb,cA5Ba,4BA4BC;IACZ,6BAA6B,CAAC,SAAD,CAA7B;IAEA,MAAM,CAAC,gBAAP,CAAwB,SAAxB,EAAmC,KAAK,aAAxC;EACD,CAhCY;EAiCb,aAjCa,2BAiCA;IACX,MAAM,CAAC,mBAAP,CAA2B,SAA3B,EAAsC,KAAK,aAA3C;EACD;AAnCY,CAAf","sourcesContent":["import { SyntheticPlatformEmitter } from 'expo-modules-core';\n\nimport {\n  assertSensorEventEnabledAsync,\n  getPermissionsAsync,\n  isSensorEnabledAsync,\n  requestPermissionsAsync,\n} from './utils/isSensorEnabledAsync.web';\n\nconst eventName = 'devicemotion';\n\nexport default {\n  get name(): string {\n    return 'ExponentDeviceMotion';\n  },\n  /**\n   * Gravity on the planet this module supports (currently just Earth) represented as m/s^2.\n   */\n  get Gravity(): number {\n    return 9.80665;\n  },\n  async isAvailableAsync(): Promise<boolean> {\n    if (typeof DeviceMotionEvent === 'undefined') {\n      return false;\n    }\n    return await isSensorEnabledAsync(eventName);\n  },\n  _handleMotion(motion) {\n    // TODO: Bacon: Can rotation be calculated?\n    SyntheticPlatformEmitter.emit('deviceMotionDidUpdate', {\n      acceleration: motion.acceleration,\n      accelerationIncludingGravity: motion.accelerationIncludingGravity,\n      interval: motion.interval,\n      rotationRate: motion.rotationRate,\n      orientation: window.orientation,\n    });\n  },\n  getPermissionsAsync,\n  requestPermissionsAsync,\n  startObserving() {\n    assertSensorEventEnabledAsync(eventName);\n\n    window.addEventListener(eventName, this._handleMotion);\n  },\n  stopObserving() {\n    window.removeEventListener(eventName, this._handleMotion);\n  },\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}